class Url < ApplicationRecord
    def self.get_url(section)
        urls = self.all
        return urls.where("section = ?", section)[0]["url"]
    end
end
# update!
# loaded
# klass
# delete_all
# cache_key
# reset
# loaded?
# preload_associations
# encode_with
# cache_version
# scoping
# new
# records
# update_counters
# build
# pretty_print
# many?
# scope_for_create
# cache_key_with_version
# predicate_builder
# values
# update
# any?
# one?
# none?
# skip_preloading_value=
# create
# delete_by
# create!
# ==
# bind_attribute
# empty?
# table
# model
# skip_preloading_value
# inspect
# eager_loading?
# has_limit_or_offset?
# first_or_create
# size
# first_or_create!
# first_or_initialize
# find_or_create_by
# find_or_initialize_by
# create_or_find_by
# find_or_create_by!
# create_or_find_by!
# update_all
# destroy_by
# touch_all
# destroy_all
# to_ary
# load_async
# scheduled?
# to_sql
# to_a
# where_values_hash
# blank?
# joined_includes_values
# values_for_queries
# alias_tracker
# load_records
# locked?
# null_relation?
# empty_scope?
# _exec_scope
# load
# explain
# reload
# second_to_last
# member?
# take
# raise_record_not_found_exception!
# find
# exists?
# include?
# sole
# find_by
# find_by!
# take!
# find_sole_by
# first!
# last!
# second!
# third!
# fourth!
# first
# last
# forty_two!
# fifth!
# second
# third_to_last!
# second_to_last!
# third
# fourth
# fifth
# forty_two
# third_to_last
# ids
# sum
# calculate
# average
# maximum
# count
# pluck
# pick
# minimum
# except
# only
# merge!
# merge
# spawn
# left_outer_joins_values
# eager_load!
# none
# order_values=
# group_values=
# skip_preloading!
# readonly
# order
# without
# references
# preload_values=
# includes_values=
# preload!
# includes!
# joins_values=
# left_outer_joins_values=
# left_outer_joins!
# reordering_value
# reorder!
# extensions
# lock_value=
# order_values
# create_with_value=
# offset_value=
# limit_value=
# where_clause=
# having_clause=
# from_clause=
# distinct!
# from_clause
# build_where_clause
# extending_values
# eager_load_values=
# references!
# references_values=
# reselect!
# group!
# extending!
# reordering_value=
# unscope!
# unscope_values
# unscope_values=
# includes
# uniq!
# invert_where!
# structurally_compatible?
# excluding
# and!
# select
# in_order_of
# or!
# having!
# offset!
# readonly_value=
# strict_loading_value=
# having_clause
# having
# from!
# create_with!
# distinct_value=
# extending_values=
# optimizer_hints!
# optimizer_hints_values
# optimizer_hints_values=
# where!
# skip_query_cache_value=
# skip_query_cache!
# annotate_values
# annotate_values=
# annotate!
# excluding!
# build_having_clause
# optimizer_hints
# distinct
# from
# strict_loading
# preload
# none!
# reverse_order
# offset
# eager_load
# lock_value
# strict_loading!
# readonly!
# distinct_value
# _select!
# build_subquery
# select_values=
# reverse_order_value
# reverse_order_value=
# arel
# select_values
# group_values
# reselect
# reorder
# joins
# left_joins
# left_outer_joins
# rewhere
# invert_where
# extract_associated
# lock!
# create_with_value
# create_with
# eager_load_values
# includes_values
# order!
# unscope
# joins_values
# group
# limit_value
# offset_value
# and
# or
# strict_loading_value
# preload_values
# limit
# extending
# lock
# readonly_value
# skip_query_cache_value
# references_values
# annotate
# where
# reverse_order!
# limit!
# construct_join_dependency
# joins!
# where_clause
# find_each
# find_in_batches
# in_batches
# collecting_queries_for_explain
# exec_explain
# primary_key
# []
# compact
# to_sentence
# sample
# shuffle
# as_json
# to_fs
# in_groups_of
# rindex
# in_groups
# to_xml
# to_formatted_s
# index
# &
# slice
# connection
# +
# -
# split
# length
# reverse
# each
# |
# join
# rotate
# each_slice
# each_cons
# each_with_object
# zip
# take_while
# drop
# drop_while
# cycle
# chunk
# slice_before
# slice_after
# slice_when
# chunk_while
# uniq
# lazy
# compact_blank
# index_with
# chain
# including
# exclude?
# to_set
# to_h
# max
# min
# index_by
# entries
# sort
# sort_by
# grep
# grep_v
# detect
# find_index
# find_all
# filter
# filter_map
# reject
# collect
# map
# flat_map
# collect_concat
# inject
# reduce
# partition
# group_by
# tally
# all?
# minmax
# min_by
# max_by
# minmax_by
# each_with_index
# reverse_each
# each_entry
# untaint
# require_dependency
# to_json
# presence
# to_yaml
# in?
# html_safe?
# deep_dup
# acts_like?
# present?
# duplicable?
# to_param
# to_query
# with_options
# instance_values
# presence_in
# instance_variable_names
# trap
# pretty_print_inspect
# pretty_print_cycle
# pretty_print_instance_variables
# try!
# try
# dup
# itself
# yield_self
# then
# taint
# tainted?
# untrust
# untrusted?
# trust
# frozen?
# methods
# singleton_methods
# protected_methods
# private_methods
# public_methods
# instance_variables
# instance_variable_get
# instance_variable_set
# instance_variable_defined?
# remove_instance_variable
# instance_of?
# kind_of?
# is_a?
# tap
# class
# singleton_class
# display
# clone
# hash
# public_send
# method
# public_method
# singleton_method
# class_eval
# define_singleton_method
# pretty_inspect
# extend
# debugger
# gem
# to_enum
# enum_for
# <=>
# ===
# =~
# !~
# nil?
# eql?
# respond_to?
# freeze
# object_id
# send
# to_s
# __send__
# !
# !=
# equal?
# __id__
# instance_eval
# instance_exec